import random

## 52 cities
cities = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z','AA', 'BB', 'CC', 'DD', 'EE', 'FF', 'GG', 'HH', 'II', 'JJ', 'KK', 'LL', 'MM', 'NN', 'OO', 'PP', 'QQ', 'RR', 'SS', 'TT', 'UU', 'VV', 'WW', 'XX', 'YY', 'ZZ']

distances = {
    'A': {'B': 4, 'C': 4, 'D': 5, 'E': 3, 'F': 7, 'G': 6, 'H': 3, 'I': 8, 'J': 9, 'K': 2, 'L': 4, 'M': 5, 'N': 3, 'O': 7, 'P': 8, 'Q': 6, 'R': 9, 'S': 10, 'T': 8, 'U': 11, 'V': 12, 'W': 10, 'X': 13, 'Y': 14, 'Z': 12},
    'B': {'A': 2, 'C': 1, 'D': 6, 'E': 2, 'F': 4, 'G': 5, 'H': 4, 'I': 5, 'J': 7, 'K': 3, 'L': 5, 'M': 6, 'N': 4, 'O': 8, 'P': 9, 'Q': 7, 'R': 10, 'S': 11, 'T': 9, 'U': 12, 'V': 13, 'W': 11, 'X': 14, 'Y': 15, 'Z': 13},
    'C': {'A': 4, 'B': 3, 'D': 1, 'E': 5, 'F': 4, 'G': 2, 'H': 5, 'I': 4, 'J': 6, 'K': 5, 'L': 7, 'M': 8, 'N': 6, 'O': 6, 'P': 7, 'Q': 5, 'R': 8, 'S': 9, 'T': 7, 'U': 10, 'V': 11, 'W': 9, 'X': 12, 'Y': 13, 'Z': 11},
    'D': {'A': 5, 'B': 6, 'C': 1, 'E': 1, 'F': 1, 'G': 3, 'H': 2, 'I': 3, 'J': 5, 'K': 6, 'L': 8, 'M': 9, 'N': 7, 'O': 8, 'P': 6, 'Q': 4, 'R': 7, 'S': 8, 'T': 6, 'U': 9, 'V': 10, 'W': 8, 'X': 11, 'Y': 12, 'Z': 10},
    'E': {'A': 3, 'B': 2, 'C': 5, 'D': 4, 'F': 1, 'G': 4, 'H': 3, 'I': 2, 'J': 3, 'K': 4, 'L': 6, 'M': 7, 'N': 5, 'O': 9, 'P': 10, 'Q': 8, 'R': 11, 'S': 12, 'T': 10, 'U': 13, 'V': 14, 'W': 12, 'X': 15, 'Y': 16, 'Z': 14},
    'F': {'A': 7, 'B': 4, 'C': 4, 'D': 1, 'E': 5, 'G': 1, 'H': 4, 'I': 3, 'J': 4, 'K': 5, 'L': 7, 'M': 8, 'N': 6, 'O': 7, 'P': 5, 'Q': 3, 'R': 6, 'S': 7, 'T': 5, 'U': 8, 'V': 9, 'W': 7, 'X': 10, 'Y': 11, 'Z': 9},
    'G': {'A': 6, 'B': 5, 'C': 2, 'D': 3, 'E': 4, 'F': 1, 'H': 3, 'I': 3, 'J': 4, 'K': 6, 'L': 8, 'M': 9, 'N': 7, 'O': 5, 'P': 4, 'Q': 2, 'R': 5, 'S': 6, 'T': 4, 'U': 7, 'V': 8, 'W': 6, 'X': 9, 'Y': 10, 'Z': 8},
    'H': {'A': 3, 'B': 4, 'C': 5, 'D': 2, 'E': 3, 'F': 4, 'G': 2, 'I': 1, 'J': 4, 'K': 5, 'L': 7, 'M': 8, 'N': 6, 'O': 3, 'P': 2, 'Q': 1, 'R': 4, 'S': 5, 'T': 3, 'U': 6, 'V': 7, 'W': 5, 'X': 8, 'Y': 9, 'Z': 7},
    'I': {'A': 8, 'B': 5, 'C': 4, 'D': 3, 'E': 2, 'F': 3, 'G': 3, 'H': 3, 'J': 1, 'K': 4, 'L': 6, 'M': 7, 'N': 5, 'O': 9, 'P': 10, 'Q': 8, 'R': 11, 'S': 12, 'T': 10, 'U': 13, 'V': 14, 'W': 12, 'X': 15, 'Y': 16, 'Z': 14},
    'J': {'A': 3, 'B': 7, 'C': 6, 'D': 5, 'E': 3, 'F': 4, 'G': 4, 'H': 4, 'I': 4, 'K': 1, 'L': 7, 'M': 8, 'N': 6, 'O': 10, 'P': 11, 'Q': 9, 'R': 12, 'S': 13, 'T': 11, 'U': 14, 'V': 15, 'W': 13, 'X': 16, 'Y': 17, 'Z': 15},
    'K': {'A': 2, 'B': 3, 'C': 5, 'D': 6, 'E': 4, 'F': 5, 'G': 6, 'H': 5, 'I': 4, 'J': 5, 'L': 6, 'M': 8, 'N': 6, 'O': 10, 'P': 11, 'Q': 9, 'R': 12, 'S': 13, 'T': 11, 'U': 14, 'V': 15, 'W': 13, 'X': 16, 'Y': 17, 'Z': 15},
    'L': {'A': 4, 'B': 5, 'C': 7, 'D': 8, 'E': 6, 'F': 7, 'G': 8, 'H': 7, 'I': 6, 'J': 7, 'K': 7, 'M': 1, 'N': 6, 'O': 10, 'P': 11, 'Q': 9, 'R': 12, 'S': 13, 'T': 11, 'U': 14, 'V': 15, 'W': 13, 'X': 16, 'Y': 17, 'Z': 15},
    'M': {'A': 5, 'B': 6, 'C': 8, 'D': 9, 'E': 7, 'F': 8, 'G': 9, 'H': 8, 'I': 7, 'J': 8, 'K': 8, 'L': 8, 'N': 1, 'O': 10, 'P': 11, 'Q': 9, 'R': 12, 'S': 13, 'T': 11, 'U': 14, 'V': 15, 'W': 13, 'X': 16, 'Y': 17, 'Z': 15},
    'N': {'A': 3, 'B': 4, 'C': 6, 'D': 7, 'E': 5, 'F': 6, 'G': 7, 'H': 6, 'I': 5, 'J': 6, 'K': 6, 'L': 6, 'M': 6, 'O': 1, 'P': 8, 'Q': 6, 'R': 9, 'S': 10, 'T': 8, 'U': 11, 'V': 12, 'W': 10, 'X': 13, 'Y': 14, 'Z': 12},
    'O': {'A': 1, 'B': 8, 'C': 6, 'D': 8, 'E': 9, 'F': 7, 'G': 5, 'H': 3, 'I': 9, 'J': 2, 'K': 6, 'L': 3, 'M': 10, 'N': 10, 'P': 5, 'Q': 6, 'R': 9, 'S': 10, 'T': 8, 'U': 11, 'V': 12, 'W': 10, 'X': 13, 'Y': 14, 'Z': 12},
    'P': {'A': 1, 'B': 8, 'C': 6, 'D': 8, 'E': 9, 'F': 7, 'G': 5, 'H': 3, 'I': 9, 'J': 2, 'K': 6, 'L': 3, 'M': 10, 'N': 10, 'O': 8, 'Q': 1, 'R': 9, 'S': 10, 'T': 8, 'U': 11, 'V': 12, 'W': 10, 'X': 13, 'Y': 14, 'Z': 12},
    'Q': {'A': 1, 'B': 8, 'C': 6, 'D': 8, 'E': 9, 'F': 7, 'G': 5, 'H': 3, 'I': 9, 'J': 2, 'K': 6, 'L': 3, 'M': 10, 'N': 10, 'O': 6, 'P': 8, 'R': 1, 'S': 10, 'T': 8, 'U': 11, 'V': 12, 'W': 10, 'X': 13, 'Y': 14, 'Z': 12},
    'R': {'A': 1, 'B': 8, 'C': 6, 'D': 8, 'E': 9, 'F': 7, 'G': 5, 'H': 3, 'I': 9, 'J': 2, 'K': 6, 'L': 3, 'M': 10, 'N': 10, 'O': 9, 'P': 8, 'Q': 6, 'S': 6, 'T': 8, 'U': 11, 'V': 12, 'W': 10, 'X': 13, 'Y': 14, 'Z': 12},
    'S': {'A': 1, 'B': 8, 'C': 6, 'D': 8, 'E': 9, 'F': 7, 'G': 5, 'H': 3, 'I': 9, 'J': 2, 'K': 6, 'L': 3, 'M': 10, 'N': 10, 'O': 10, 'P': 8, 'Q': 6, 'R': 9, 'T': 1, 'U': 11, 'V': 12, 'W': 10, 'X': 13, 'Y': 14, 'Z': 12},
    'T': {'A': 1, 'B': 8, 'C': 6, 'D': 8, 'E': 9, 'F': 7, 'G': 5, 'H': 3, 'I': 9, 'J': 2, 'K': 6, 'L': 3, 'M': 10, 'N': 10, 'O': 8, 'P': 8, 'Q': 6, 'R': 9, 'S': 10, 'U': 1, 'V': 12, 'W': 10, 'X': 13, 'Y': 14, 'Z': 12},
    'U': {'A': 1, 'B': 8, 'C': 6, 'D': 8, 'E': 9, 'F': 7, 'G': 5, 'H': 3, 'I': 9, 'J': 2, 'K': 6, 'L': 3, 'M': 10, 'N': 10, 'O': 11, 'P': 8, 'Q': 6, 'R': 9, 'S': 10, 'T': 8, 'V': 1, 'W': 10, 'X': 13, 'Y': 14, 'Z': 12},
    'V': {'A': 1, 'B': 8, 'C': 6, 'D': 8, 'E': 9, 'F': 7, 'G': 5, 'H': 3, 'I': 9, 'J': 2, 'K': 6, 'L': 3, 'M': 10, 'N': 10, 'O': 12, 'P': 8, 'Q': 6, 'R': 9, 'S': 10, 'T': 8, 'U': 11, 'W': 1, 'X': 13, 'Y': 14, 'Z': 12},
    'W': {'A': 1, 'B': 8, 'C': 6, 'D': 8, 'E': 9, 'F': 7, 'G': 5, 'H': 3, 'I': 9, 'J': 2, 'K': 6, 'L': 3, 'M': 10, 'N': 10, 'O': 10, 'P': 8, 'Q': 6, 'R': 9, 'S': 10, 'T': 8, 'U': 11, 'V': 12, 'X': 1, 'Y': 14, 'Z': 12},
    'X': {'A': 1, 'B': 8, 'C': 6, 'D': 8, 'E': 9, 'F': 7, 'G': 5, 'H': 3, 'I': 9, 'J': 2, 'K': 6, 'L': 3, 'M': 10, 'N': 10, 'O': 13, 'P': 8, 'Q': 6, 'R': 9, 'S': 10, 'T': 8, 'U': 11, 'V': 12, 'W': 10, 'Y': 1, 'Z': 12},
    'Y': {'A': 1, 'B': 8, 'C': 6, 'D': 8, 'E': 9, 'F': 7, 'G': 5, 'H': 3, 'I': 9, 'J': 2, 'K': 6, 'L': 3, 'M': 10, 'N': 10, 'O': 14, 'P': 8, 'Q': 6, 'R': 9, 'S': 10, 'T': 8, 'U': 11, 'V': 12, 'W': 10, 'X': 13, 'Z': 1},
    'Z': {'A': 1, 'B': 8, 'C': 6, 'D': 8, 'E': 9, 'F': 7, 'G': 5, 'H': 3, 'I': 9, 'J': 2, 'K': 6, 'L': 3, 'M': 10, 'N': 10, 'O': 12, 'P': 8, 'Q': 6, 'R': 9, 'S': 10, 'T': 8, 'U': 11, 'V': 12, 'W': 10, 'X': 13, 'Y': 14}
}

def generate_adjacent_list():
    # Create an empty adjacency list
    distances = {node: {} for node in cities}

    # Generate random edges between nodes
    for i in range(len(cities)):
        for j in range(i+1, len(cities)):
            distance = random.randint(1, 20)
            distances[cities[i]][cities[j]] = distance
            distances[cities[j]][cities[i]] = distance

    return distances

